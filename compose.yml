name: "guziohub"

secrets:
  bot_minecraft:
    file: "./secrets/bot_minecraft.txt"
  mc_seed:
    file: "./secrets/mc_seed.txt"
  pgpass:
    file: "./secrets/pgpass.txt"
  ncappkey:
    file: "./secrets/ncappkey.txt"
  mxregkey:
    file: "./secrets/mxregkey.txt"
  mxturn:
    file: "./secrets/mxturn.txt"
  ldap_key:
    file: "./secrets/ldap_key.txt"
  ldap_jwt:
    file: "./secrets/ldap_jwt.txt"
  ldap_pass:
    file: "./secrets/ldap_pass.txt"

services:
  web:
    image: caddy:alpine
    pull_policy: always
    restart: unless-stopped
    volumes:
      - ./caddy/etc:/etc/caddy
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./caddy/website-public:/srv:ro
      - ./nc:/var/www/html:ro
      - ../files/drive:/var/www/html/data:ro
    ports:
      - "80:80"
      - "443:443"
      - "80:80/udp"
      - "443:443/udp"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "127.0.0.1:2019/metrics"]
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 5s
    environment:
      TZ: Europe/Warsaw

  nextcloud:
    image: nextcloud:31-fpm-alpine
    restart: unless-stopped
    depends_on:
      imaginary:
        condition: service_healthy
      pgdb:
        condition: service_healthy
      web:
        condition: service_healthy
      redis:
        condition: service_healthy
      ncapps:
        condition: service_healthy
      ldap:
        condition: service_started # no healthcheck :-(
    secrets:
      - pgpass
    volumes:
      - ./nc:/var/www/html
      - ../files/drive:/var/www/html/data
    environment:
      TZ: Europe/Warsaw
      NEXTCLOUD_TRUSTED_DOMAINS: drive.guziohub.ovh
      OVERWRITEHOST: drive.guziohub.ovh
      OVERWRITECLIURL: https://drive.guziohub.ovh
      OVERWRITEPROTOCOL: https
      TRUSTED_PROXIES: 172.16.0.0/24
      PHP_MEMORY_LIMIT: 1G
      PHP_UPLOAD_LIMIT: 10G
      POSTGRES_HOST: pgdb
      POSTGRES_DB: nextcloud
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/pgpass
      NEXTCLOUD_ADMIN_USER: root
      REDIS_HOST: redis
      DOMAIN: drive.guziohub.ovh
      NEXTCLOUD_VERSION: 31-fpm-alpine
      UID: "1001"
      GID: "1001"

  imaginary:
    image: nextcloud/aio-imaginary:latest
    restart: unless-stopped
    stop_grace_period: 1s
    expose:
      - "9000"
    environment:
      TZ: Europe/Warsaw
    cap_add:
      - SYS_NICE
    tmpfs:
      - /tmp

  nctasks:
    image: nextcloud:31-fpm-alpine
    restart: unless-stopped
    stop_grace_period: 1s
    volumes:
      - ./nc:/var/www/html
      - ../files/drive:/var/www/html/data
    entrypoint: /cron.sh
    environment:
      TZ: Europe/Warsaw
    depends_on:
      pgdb:
        condition: service_healthy
      redis:
        condition: service_healthy
  
  ncapps:
    image: ghcr.io/nextcloud/nextcloud-appapi-dsp:release
    restart: unless-stopped
    stop_grace_period: 1s
    secrets:
      - ncappkey
    environment:
      NC_HAPROXY_PASSWORD_FILE: /run/secrets/ncappkey
      TZ: Europe/Warsaw
    volumes:
      - /run/user/1001/podman/podman.sock:/var/run/docker.sock
    privileged: true #Security nightmare, but it needs it to be able to manage other containers
  
  redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    
  pgdb:
    image: postgres:17-alpine
    restart: unless-stopped
    secrets:
      - pgpass
    volumes:
      - ./db/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/pgpass
      TZ: Europe/Warsaw
    healthcheck:
      test: ["CMD", "pg_isready"]
      start_period: 15s
      interval: 30s
      retries: 3
      timeout: 5s
  
  mxtuwunel:
    image: ghcr.io/matrix-construct/tuwunel:preview
    tty: true
    stdin_open: true
    restart: unless-stopped
    secrets:
      - mxregkey
      - mxturn
      - ldap_pass
    volumes:
      - ./db/matrix:/var/lib/tuwunel
      - ../files/chat:/var/lib/tuwunel/media
    depends_on:
      web:
        condition: service_healthy
      mxturn:
        condition: service_started # no healthcheck :-(
      ldap:
        condition: service_started # ...here, too :-(
    ulimits: # tuwunel uses quite a few file descriptors, and on some systems it defaults to 1024, so you can tell docker to increase it [FROM: https://github.com/matrix-construct/tuwunel/blob/main/docs/deploying/docker-compose.for-traefik.yml#L38-L41]
      nofile:
        soft: 1048567
        hard: 1048567
    environment:
      # Core
      TUWUNEL_SERVER_NAME: guziohub.ovh
      TUWUNEL_DATABASE_PATH: /var/lib/tuwunel
      TUWUNEL_ADDRESS: 0.0.0.0
      TUWUNEL_LOG_THREAD_IDS: 'true'
      TUWUNEL_MAX_REQUEST_SIZE: 100000000 # B  =  100 MB
      TUWUNEL_CACHE_CAPACITY_MODIFIER: 2.5
      TUWUNEL_ALLOW_CHECK_FOR_UPDATES: 'true'
      TUWUNEL_ADMIN_CONSOLE_AUTOMATIC: 'true'
      TUWUNEL_SENTRY: 'true'
      TUWUNEL_SENTRY_SEND_SERVER_NAME: 'true'
      TUWUNEL_WELL_KNOWN__CLIENT: 'https://api.chat.guziohub.ovh'
      TUWUNEL_WELL_KNOWN__SERVER: 'matrix.guziohub.ovh:443'
      TZ: "Europe/Warsaw"
      # Database & media
      TUWUNEL_ROCKSDB_STATS_LEVEL: 2
      TUWUNEL_ROCKSDB_RECOVERY_MODE: 0
      TUWUNEL_MEDIA_STARTUP_CHECK: 'false'
      TUWUNEL_ALLOW_LEGACY_MEDIA: 'true'
      TUWUNEL_BLURHASHING__COMPONENTS_X: 6
      TUWUNEL_BLURHASHING__COMPONENTS_Y: 6
      TUWUNEL_BLURHASHING__BLURHASH_MAX_RAW_SIZE: 180000000 # B  =  180 MB  („a bit more than the upload limit”, as the documentation recommends - interpretation of „a bit” left to the user, so I went with just under 2x lol)
      # DNS
      TUWUNEL_QUERY_OVER_TCP_ONLY: 'false' # For better performance under Docker (and presumably Podman too, which is where this is actually supposed to be run), this need to be set to true. Can't do it now, though, because AppServices will break - regarless of TUWUNEL_DNS_PASSTHRU_APPSERVICES.
      TUWUNEL_IP_LOOKUP_STRATEGY: 3
      TUWUNEL_DNS_PASSTHRU_APPSERVICES: 'true'
      # Users
      TUWUNEL_ALLOW_REGISTRATION: 'false'
      TUWUNEL_REGISTRATION_TOKEN_FILE: '/run/secrets/mxregkey'
      TUWUNEL_NEW_USER_DISPLAYNAME_SUFFIX: ''
      TUWUNEL_SUPPRESS_PUSH_WHEN_ACTIVE: 'true'
      TUWUNEL_TYPING_CLIENT_TIMEOUT_MIN_S: 5
      TUWUNEL_TYPING_CLIENT_TIMEOUT_MAX_S: 900
      TUWUNEL_URL_PREVIEW_DOMAIN_EXPLICIT_ALLOWLIST: '["*"]'
      TUWUNEL_URL_PREVIEW_DOMAIN_EXPLICIT_DENYLIST: '["localhost"]' # Localhost ought to be blocked, to prevent people from accidentally leaking their personal projects and stuff. As for the actual security - I'll ask around in the community (once I actually become a part of it, aka get this thing up and running), which addresses are known to be malicious. I'd rather not set up an explicit allow-list (hence the "*" above) and only block known-malicious ones becasue - as (probably) one of the only few users of this homeserver - I'm willing to take the risk of someone accidentially maybe-hypothetically seeing my ISP's IP somewhere (I'm behind a pretty strong NAT (hence why I said „ISP's IP” not „my IP”), which (as annoying as it is for self hosting) makes IP exposures much less of a problem to me), over the inconveince of having embeds (which I absolutely LOVE - my Discord past is showing, ig) be broken.
      TUWUNEL_URL_PREVIEW_CHECK_ROOT_DOMAIN: 'true' # This is set in advance, for the very unlikely event that I switch to an explicit allow-list instead of a deny-list (which - as stated above - I much prefer).
      TUWUNEL_DELETE_ROOMS_AFTER_LEAVE: 'false' # This technically defaults to false already, but the docs state that this may change in the future.
      TUWUNEL_GRANT_ADMIN_TO_FIRST_USER: 'false'
      # Federation
      TUWUNEL_ALLOW_FEDERATION: 'true'
      TUWUNEL_ALLOW_PUBLIC_ROOM_DIRECTORY_OVER_FEDERATION: 'true'
      TUWUNEL_LOCKDOWN_PUBLIC_ROOM_DIRECTORY: 'true'
      TUWUNEL_REQUIRE_AUTH_FOR_PROFILE_REQUESTS: 'true'
      TUWUNEL_TYPING_FEDERATION_TIMEOUT_S: 900
      TUWUNEL_TRUSTED_SERVERS: '["matrix.org"]'
      # LDAP
      TUWUNEL_LDAP__ENABLE: 'true'
      TUWUNEL_LDAP__URI: 'ldap://ldap:3890'
      TUWUNEL_LDAP__BASE_DN: 'ou=people,dc=guziohub,dc=ovh'
      TUWUNEL_LDAP__BIND_DN: 'cn=admin,ou=people,dc=guziohub,dc=ovh'
      TUWUNEL_LDAP__BIND_PASSWORD_FILE: /run/secrets/ldap_pass
      TUWUNEl_LDAP__FILTER: '(&(objectclass=person)(memberOf=cn=matrix,ou=groups,dc=guziohub,dc=ovh))'
      TUWUNEL_LDAP__UID_ATTRIBUTE: 'uid'
      TUWUNEL_LDAP__NAME_ATTRIBUTE: 'displayname'
      TUWUNEL_LDAP__MAIL_ATTRIBUTE: 'email'
      #TURN
      TUWUNEL_TURN_URIS: '["turn:rtc.chat.guziohub.ovh?transport=udp","turn:rtc.chat.guziohub.ovh?transport=tcp"]'
      TUEUNEL_TURN_SECRET_FILE: '/run/secrets/mxturn'
      # Support
      TUWUNEL_WELL_KNOWN__SUPPORT_PAGE: 'https://guziohub.ovh/matrix/help.html'
      TUWUNEL_WELL_KNOWN__SUPPORT_ROLE: 'Admin'
      TUWUNEL_WELL_KNOWN__SUPPORT_MXID: '@guzio:guziohub.ovh'
      TUWUNEL_WELL_KNOWN__SUPPORT_EMAIL: 'guzekk@protonmail.com'
  
  mxturn:
    image: coturn/coturn:alpine
    restart: unless-stopped
    network_mode: "host" # Coturn needs to be able to bind to many ports, so - even if it's security nightmare - it needs host networking to perform well (According to their docs, Docker is bad with large port ranges. Dunno if this also applies to Podman, but I'd rather not risk it. Especially with how I have no real way of debugging TURN performance, so unless it was obscenely bad, I wouldn't've even known if I'm leaving performance on the table.).
    volumes:
      - type: bind
        source: ./secrets/mxturnfull.conf
        target: /etc/coturn/turnserver.conf
        read_only: true
      - type: tmpfs # Provides a speed boost, according to https://github.com/coturn/coturn/blob/master/docker/coturn/README.md?plain=1#L118-L125  Why they don't just do this by default is beyond me. I'm pretty sure TURN serevers don't need persistent storage (from my own understanding of WebRTC - and from how they recommend to use tmpfs for a speed bump in their own docs, which they probably wouldn't advise (not without a warning, anyway) if they knew they were risks involved), so it should've been fine for them to do.
        target: /var/lib/coturn
  
  mxelement:
    image: vectorim/element-web:develop # Using `develop` because it has the latest features and fixes. I'm likely gonna be one of the only few users, so I can afford to be a bit more adventurous. And it's only the GUI, so having it break wouldn't be the end of the world (no data loss or anything); I can just revert to `latest` (I think that's stable??) if that happens.
    restart: unless-stopped
    depends_on:
      mxtuwunel:
        condition: service_healthy
      web:
        condition: service_healthy
    expose:
      - 8080
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://localhost:8080/version || exit 1"] # FROM: https://github.com/element-hq/element-docker-demo/blob/main/compose.yml#L243-L247
      start_period: "5s"
      interval: "15s"
      timeout: "5s"
    volumes:
      - ./element-config.json:/app/config.json:ro
    environment:
      TZ: Europe/Warsaw
      ELEMENT_WEB_PORT: 8080
  
  mxbot-meta:
    image: dock.mau.dev/mautrix/meta:latest
    depends_on:
      mxtuwunel:
        condition: service_healthy
    restart: unless-stopped
    expose:
      - 29319
    volumes:
    - ./db/matrix/_CLANKERS/meta:/data
  
  mxbot-discord:
    image: dock.mau.dev/mautrix/discord:latest
    depends_on:
      mxtuwunel:
        condition: service_healthy
    restart: unless-stopped
    volumes:
    - ./db/matrix/_CLANKERS/discord:/data
  
  ldap:
    image: ghcr.io/lldap/lldap:latest-alpine
    volumes:
      - ./db/users:/data
    secrets:
      - ldap_key
      - ldap_jwt
      - ldap_pass
    expose:
      - 17170
      - 3890
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw
      LLDAP_JWT_SECRET: /run/secrets/ldap_jwt
      LLDAP_KEY_SEED: /run/secrets/ldap_key
      LLDAP_LDAP_USER_PASS_FILE: /run/secrets/ldap_pass
      LLDAP_LDAP_BASE_DN: dc=guziohub,dc=ovh
  
  minecraft:
    # Docker Config
    image: "itzg/minecraft-server:java21-graalvm"
    tty: true
    stdin_open: true
    volumes:
      - "../minecraft/servers/[NAME]:/data"
      - "../minecraft/builds:/modpacks:ro"
    ports:
      - "25565:25565"
    #restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc-health"]
      start_period: 210s #3,5min
      interval: 3s
      retries: 40 #extra 2min
    secrets:
      - bot_minecraft
      - mc_seed
    # MC Config
    environment:
      # Modpack
      TYPE: "MODRINTH"
      MODRINTH_MODPACK: "/modpacks/[NAME].mrpack" # Placeholder. For now, mc-docker will try to load it, fail (because there'd be no such file) and (due to `restart: no`) not try again. If I ever run an MC server on this machine in the future, this (along with the restart policy) will of course have to be changed.
      # Minecraft stuff
      GUI: "FALSE"
      EULA: "TRUE"              #  Why are some bools upper-case...
      # Java stuff
      MEMORY: "18G"
      USE_AIKAR_FLAGS: "true"   #  ...and others lower-case? No fucking idea! I'm just following the docs, that's all.
      # Secrets
      CFG_BOT_TOKEN_FILE: "/run/secrets/bot_minecraft"
      CFG_SEED_FILE: "/run/secrets/mc_seed"
      # Desperatley trying to get Secrets to work
      REPLACE_ENV_VARIABLES: "TRUE"
      ENV_VARIABLE_PREFIX: "CFG_"
      REPLACE_ENV_IN_PLACE: "true"
      REPLACE_ENV_DURING_SYNC: "true"
      # Misc
      TZ: "Europe/Warsaw"
      LOG_TIMESTAMP: "true"
      GID: "0"
      UID: "0"
      MODRINTH_FORCE_SYNCHRONIZE: "true"
      DATAPACKS: "/data/datapacks"
      LEVEL: "world"